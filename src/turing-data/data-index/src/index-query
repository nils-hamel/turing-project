#!/bin/bash

## turing project
##
##     Nils Hamel - nils.hamel@bluewin.ch
##     Copyright (c) 2016-2018 DHLAB, EPFL
##
## This program is free software: you can redistribute it and/or modify
## it under the terms of the GNU General Public License as published by
## the Free Software Foundation, either version 3 of the License, or
## (at your option) any later version.
##
## This program is distributed in the hope that it will be useful,
## but WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
## GNU General Public License for more details.
##
## You should have received a copy of the GNU General Public License
## along with this program.  If not, see <http://www.gnu.org/licenses/>.

##
##  script - script variables
##

# query index time #
ML_TIME=

# query index space #
ML_SPACE=

# query index span #
ML_SPAN=

# index space enumeration depth #
ML_DEPTH=

# remote server ip address #
ML_SRIP=

# remote server port number #
ML_SRPT=

# exportation path #
ML_EXPORT=

# exportation limit #
ML_LIMIT=0

##
##  script - arguments and parameters
##

function ml_args() {

    # parsing arguments and parameters #
    while [[ ${#} > 0 ]]; do

        # read argument #
        ml_arg="${1}"; shift

        # switch on argument #
        case ${ml_arg} in

            --time|-t)
                ML_TIME=${1}
            shift;;

            --address|-a)
                ML_SPACE=${1//,/ }
            shift;;

            --span|-s)
                ML_SPAN=${1}
            shift;;

            --depth|-d)
                ML_DEPTH=${1}
            shift;;

            --ip|-i)
                ML_SRIP=${1}
            shift;;

            --port|-p)
                ML_SRPT=${1}
            shift;;

            --export|-e)
                ML_EXPORT=${1}
            shift;;

            --limit|-l)
                ML_LIMIT=${1}
            shift;;

        esac

    done

}

##
##  script - main function
##

# arguments and parameters #
ml_args ${@}

# parsing index spatial components #
for ml_space in ${ML_SPACE}; do

    # enumerate index #
    eratosthene-raster -i ${ML_SRIP} -p ${ML_SRPT} -q /1/${ML_TIME},0/${ml_space}/${ML_SPAN} -d ${ML_DEPTH} -l ${ML_LIMIT} -e ${ML_EXPORT}

done

